pool:
  vmImage: ubuntu-latest

steps:
- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'build jacocoTestReport jacocoTestCoverageVerification'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: false
    spotBugsAnalysis: false
- task: PublishCodeCoverageResults@1
  inputs:
     codeCoverageTool: 'JaCoCo'
     summaryFileLocation: '$(System.DefaultWorkingDirectory)/build/reports/jacoco/test/jacocoTestReport.xml'
     pathToSources: '$(System.DefaultWorkingDirectory)/src/main/java/'
     reportDirectory: '$(System.DefaultWorkingDirectory)/build/reports/jacoco/test'
     failIfCoverageEmpty: true
  displayName: 'Pruebas unitarias'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'azuredevopslab'
    organization: 'genzodeveloper'
    projectKey: 'genzodeveloper_microservicio-spring'
    projectName: 'microservicio-spring'
  displayName: 'SonarCloud Prepare'


- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'sonarqube'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: true
    sqGradlePluginVersionChoice: 'specify'
    sonarQubeGradlePluginVersion: '3.5.0.2730'
    spotBugsAnalysis: false

- task: Docker@2
  inputs:
    containerRegistry: 'Docker'
    repository: 'javierhormazabal/repository_labfinal'
    command: 'login'

- task: Docker@2
  inputs:
    containerRegistry: 'Docker'
    repository: 'javierhormazabal/repository_labfinal'
    command: 'build'
    Dockerfile: '**/Dockerfile'

- task: Docker@2
  inputs:
    containerRegistry: 'Docker'
    repository: 'javierhormazabal/repository_labfinal'
    command: 'push'
    tags: |
              $(Build.BuildId)
              latest